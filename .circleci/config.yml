version: 2
jobs:
  build:
    machine: 
      image: circleci/classic:edge
    working_directory: ~/project
    steps:
      - checkout
      # TODO:暗号化したファイルをリポジトリからダウンロードし復号する
      - run: mkdir env
      - run: touch env/rails.env
      - run: echo ${RAILS_ENV} >> env/rails.env
      - run: touch env/mysql.env
      - run: echo ${MYSQL_ROOT_USERNAME} >> env/mysql.env
      - run: echo ${MYSQL_ROOT_PASSWORD} >> env/mysql.env
      - run: docker-compose build
      - run: docker-compose up -d
      - run: sleep 15
      - run: docker-compose run --rm rails rails db:create
      - run: docker-compose run --rm rails rails db:migrate
      - run: docker-compose run --rm rails rails db:seed
      - run: docker-compose run --rm rails rails t
      - run: docker-compose down
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # CicleCIに登録した秘密鍵を呼び出す
      - add_ssh_keys:
      - run: ssh ${USER_NAME}@${HOST_NAME} 'cd app/media && git pull && docker-compose run --rm rails bundle install && docker-compose run --rm rails rails db:migrate'
# テストが成功した場合のみ、deployを実行するようにする
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # masterブランチがpushされた場合のみdeployするようにする
          filters:
            branches:
              only: master